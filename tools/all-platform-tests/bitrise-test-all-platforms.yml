---
format_version: '8'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: other

# Stack specification:
# https://github.com/bitrise-io/bitrise.io/blob/master/system_reports/osx-xcode-11.5.x.log
#
# This stack is configured for the `trigger_all_platform_tests` workflow
# defined in Workflow Editor on Bitrise.io
#
# To properly use this stack, environment variables need to be picked up carefully:
# - SIMULATOR_DEVICE - pick one listed in `== Device Types ==`
# - SIMULATOR_OS_VERSION - pick one listed in `== Runtimes ==`

app:
  envs:
  - PROJECT_PATH: Datadog.xcworkspace
  - PROJECT_SCHEME: Datadog

workflows:
  run_all:
    after_run:
    - _make_dependencies
    - _run_unit_tests_iOS12.0
    - _run_unit_tests_iOS12.1
    - _run_unit_tests_iOS12.2
    - _run_unit_tests_iOS12.4
    - _run_unit_tests_iOS13.0
    - _run_unit_tests_iOS13.1
    - _run_unit_tests_iOS13.2
    - _run_unit_tests_iOS13.3
    - _run_unit_tests_iOS13.4
    - _run_unit_tests_iOS13.5
    - _deploy_artifacts

  # Platform-specific workflows:

  _run_unit_tests_iOS12.0:
    envs:
    - SIMULATOR_DEVICE: iPhone X
    - SIMULATOR_OS_VERSION: '12.0'
    after_run:
    - _run_unit_tests

  _run_unit_tests_iOS12.1:
    envs:
    - SIMULATOR_DEVICE: iPhone X
    - SIMULATOR_OS_VERSION: '12.1'
    after_run:
    - _run_unit_tests

  _run_unit_tests_iOS12.2:
    envs:
    - SIMULATOR_DEVICE: iPhone X
    - SIMULATOR_OS_VERSION: '12.2'
    after_run:
    - _run_unit_tests

  _run_unit_tests_iOS12.4:
    envs:
    - SIMULATOR_DEVICE: iPhone X
    - SIMULATOR_OS_VERSION: '12.4'
    after_run:
    - _run_unit_tests

  _run_unit_tests_iOS13.0:
    envs:
    - SIMULATOR_DEVICE: iPhone 11
    - SIMULATOR_OS_VERSION: '13.0'
    after_run:
    - _run_unit_tests

  _run_unit_tests_iOS13.1:
    envs:
    - SIMULATOR_DEVICE: iPhone 11
    - SIMULATOR_OS_VERSION: '13.1'
    after_run:
    - _run_unit_tests

  _run_unit_tests_iOS13.2:
    envs:
    - SIMULATOR_DEVICE: iPhone 11
    - SIMULATOR_OS_VERSION: '13.2'
    after_run:
    - _run_unit_tests

  _run_unit_tests_iOS13.3:
    envs:
    - SIMULATOR_DEVICE: iPhone 11
    - SIMULATOR_OS_VERSION: '13.3'
    after_run:
    - _run_unit_tests

  _run_unit_tests_iOS13.4:
    envs:
    - SIMULATOR_DEVICE: iPhone 11
    - SIMULATOR_OS_VERSION: '13.4'
    after_run:
    - _run_unit_tests

  _run_unit_tests_iOS13.5:
    envs:
    - SIMULATOR_DEVICE: iPhone 11
    - SIMULATOR_OS_VERSION: '13.5'
    after_run:
    - _run_unit_tests

  # Platform-agnostic workflows:

  _make_dependencies:
    description: |-
        Does `make dependencies` to prepare source code in repo for building and testing.
    steps:
    - script@1.1.6:
        title: Do `make dependencies`.
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -e
            make dependencies

  _deploy_artifacts:
    description: |-
        Uploads artifacts to associate them with build log on Bitrise.io.
    steps:
    - deploy-to-bitrise-io: {}

  _run_unit_tests:
    steps:
    - script@1.1.6:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            echo "+------------------------------------------------------------------------------+"
            printf '| %-78s |\n' "ðŸ§ª Runing unit tests for ${PROJECT_SCHEME} on ${SIMULATOR_DEVICE} (${SIMULATOR_OS_VERSION})"
            echo "+------------------------------------------------------------------------------+"
    - xcode-test@2.4.5:
        title: Run unit tests for given platform
        is_always_run: true # continue next tests if some failed
        inputs:
        - project_path: $PROJECT_PATH
        - scheme: $PROJECT_SCHEME
        - simulator_device: $SIMULATOR_DEVICE
        - simulator_os_version: $SIMULATOR_OS_VERSION
        - is_clean_build: 'no'
        - should_retry_test_on_fail: 'yes' # retry once to mitigate flakiness
        - generate_code_coverage_files: 'yes'
        - xcpretty_test_options: --color --report html --output "${BITRISE_DEPLOY_DIR}/Unit-tests-${PROJECT_SCHEME}-${SIMULATOR_DEVICE} (${SIMULATOR_OS_VERSION}).html"
